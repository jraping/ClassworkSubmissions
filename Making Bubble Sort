/**
 * Create a class that sorts elements in numerical order
 * @author Justin Raping
 */
public class BubbleSorter 
{

	public static void main(String[] args) 
	{
		//create make random method
		makeRandom();
		
		//set the randomly generated array equal
		//to an int[] array
		int[] randomNumbers = makeRandom();
		
		//create bubble sort method and pass it 
		//the random array for it to be sorted
		bubbleSort(randomNumbers);
		
		//create method to print the array and
		//pass it the array we want to print
		printArr((bubbleSort(randomNumbers)));
	}

	/**
	 * method to sort the elements in an array in numerical
	 * order
	 * @param ranNum
	 * @return
	 */
	private static int[] bubbleSort(int[] ranNum) 
	{
		//create a placeholder int
		int place;
		
		//create a traversal to go through each number
		for (int i=0; i<ranNum.length-1;i++)
		{
			//check the instance of each element through
			//a nested for loop
			for (int j=0; j<ranNum.length-1-i;j++)
			{
				//if statement to check if current
				//element is greater than the next
				//one
				if(ranNum[j]>ranNum[j+1])
				{
					//if greater than, switch the values
					place = ranNum[j];
					ranNum[j] = ranNum[j+1];
					ranNum[j+1] = place;
				}
			}
		}
		//return the array
		return ranNum;
		
	}

	/**
	 * create an array with 2000 values that are 
	 * generated at random
	 * @return
	 */
	private static int[] makeRandom() 
	{
		//create an array with 2000 values
		int[] bigNums = new int[2000];
		
		//create an int that's equal to the length
		//of the array
		int len = bigNums.length;
		
		//create a for loop to traverse through the array
		for (int i = 0; i < len; i++)
		{
			//create an int that is equal to a random number
			//set the element at the 'i' value equal to the
			//random number
			int randomNumber = (int) ((Math.random() * 1000) + 1);
			bigNums[i] = randomNumber;
			
		}
		
		//return the array
		return bigNums;
		
	}
	
	/**
	 * method to print an array
	 * @param arr
	 */
	public static void printArr(int[] arr) 
	{
		//declare a variable to be the thing that
		//traverses the array
		int counter = 0;
		
		//print out the brace
		System.out.print("{");
		//create a for method to print each 
		//element in the array
		for(;counter < arr.length ; counter++)
		{
			//print out each element
			System.out.print( arr[counter] );
			//if statement to keep printing commas
			//after each element until the last one
			if (counter!=arr.length-1)
			{
				//prints comma
				System.out.print(", ");
			}
		}
		//finish out printing the element by closing 
		//it with a bracket
		System.out.print("}");
	}
}
